[project]
# -- Metadata --------------------------------------------------------------------------------------
name = "ScraperFC"
version = "3.4.0"
description = "Package for scraping soccer data from a variety of sources."
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">= 3.9"
keywords = [
    "webscraping", "scraping", "soccer", "football", "soccer data", "football data", 
    "English Premier League", "La Liga", "Bundesliga", "Serie A", "Ligue 1", "Champions League",
    "World Cup"
]
authors = [
    {email = "osmour043@gmail.com"},
    {name = "Owen Seymour"}
]
classifiers = [
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent"
]
dependencies = [
    "botasaurus>=4.0.76",
    "bs4>=0.0.2",
    "cloudscraper>=1.2.71",
    "datetime>=5.5",
    "lxml>=5.3.0",
    "numpy>=2.0.2",
    "pandas>=2.2.3",
    "pyyaml>=6.0.2",
    "requests>=2.32.3",
    "rootutils>=1.0.7",
    "selenium>=4.28.1",
    "tqdm>=4.67.1",
]

[dependency-groups]
dev = [
    # General
    "marimo>=0.14.16",
    "tox>=4.24.1",
    # Test
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    # Lint
    "ruff>=0.11.10",
    # Docs
    "furo>=2024.8.6",
    "myst-nb>=1.1.2",
    "sphinx>=7.4.7",
    # Build
    "build>=1.2.2.post1",
    "setuptools>=75.8.0",
    "wheel>=0.45.1",
    # Publish
    "publish>=0.3.6",
    # Typecheck
    "pandas-stubs>=2.2.2.240807",
    "types-beautifulsoup4>=4.12.0.20241020",
    "types-openpyxl>=3.1.5.20241225",
    "types-python-dateutil>=2.9.0.20241206",
    "types-requests>=2.32.0.20241016",
    "types-tqdm>=4.67.0.20241221",
    "ty>=0.0.1a17",
    "mypy>=1.14.1",
    "types-pyyaml>=6.0.12.20250516",
]

[project.urls]
repository = "https://github.com/oseymour/ScraperFC/"
documentation = "https://scraperfc.readthedocs.io/en/latest/"

# -- Build system ----------------------------------------------------------------------------------
[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

# -- Testing ---------------------------------------------------------------------------------------
[tool.pytest]
norecursedirs = ["docs", "*.egg-info", ".git", ".tox"]

[tool.coverage.run]
branch = true
omit = ["*oddsportal.py"]

[tool.coverage.report]
show_missing = true

# -- Linting ---------------------------------------------------------------------------------------
[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = ["ALL"]
exclude = ["**/{test}/*"]
ignore = [
    "D100", "D200", "D210", "D400", "D401", "D403", "D413", "D415", "EM101", "EM102", "I001", 
    "TRY003"
]

# -- Typechecking ----------------------------------------------------------------------------------
[tool.mypy]
ignore_missing_imports = true
disallow_untyped_defs = true

# -- Tox  ------------------------------------------------------------------------------------------
[tool.tox]
legacy_tox_ini = """
    [tox]
    isolated_build = true
    envlist = py39, py310, py311, py312

    [testenv]
    usedevelop = True
    extras = dev
    allowlist_externals = uv, sphinx-build
    install_command = uv pip install

    [testenv:test-all]
    commands = 
        python -m pip list
        uv run --active pytest ./test/ --cov ScraperFC

    [testenv:test-capology]
    commands = 
        pip list
        uv run --active pytest ./test/test_capology.py --cov ScraperFC

    [testenv:test-clubelo]
    commands = 
        pip list
        uv run --active pytest ./test/test_clubelo.py --cov ScraperFC

    [testenv:test-fbref]
    commands = 
        pip list
        uv run --active pytest ./test/test_fbref.py --cov ScraperFC

    [testenv:test-sofascore]
    commands = 
        pip list
        uv run --active pytest ./test/test_sofascore.py --cov ScraperFC

    [testenv:test-transfermarkt]
    commands = 
        pip list
        uv run --active pytest ./test/test_transfermarkt.py --cov ScraperFC

    [testenv:test-understat]
    commands = 
        pip list
        uv run --active pytest ./test/test_understat.py --cov ScraperFC

    [testenv:docs]
    extras = dev
    commands = uv run --active sphinx-build -nWEa --keep-going -b html ./docs/source/ ./docs/build/

    [testenv:build]
    skip_install = true
    commands = python -m build

    [testenv:lint]
    commands = 
        uv run --active ruff check --select W291 --fix  # fix trailing whitespace
        uv run --active ruff check --select W292 --fix  # fix missing new line at end of file
        uv run --active ruff check --select W293 --fix --unsafe-fixes  # fix blank line with whitespace
        uv run --active ruff check

    [testenv:typecheck]
    commands = uv run --active mypy ./src
"""
